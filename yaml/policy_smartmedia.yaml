apiVersion: v1
data:
  main: |
    package dataapi.authz
    rule[{"name": "test", "action": "test", "method": input.request.method, "role": input.request.role}] {
      1 == 1
    }
    
    rule[{"name": "Only allow administrator GET access to assets when organization is unsafe", "action": "BlockResource"}]{
      input.request.situationStatus == "organization-unsafe"
      input.request.method == "GET"
      input.request.role != "Admin"
    }

    rule[{"name": "Block video-booth_operator from GETting videos", "action": "BlockResource"}]{
      input.request.method == "GET"
      input.request.role == "video-booth-operator"
      input.request.asset == "videos"
    }
    
    rule[{"name": "Block video-editor from POSTting", "action": "BlockResource"}]{
      input.request.method == "POST"
      input.request.role == "video-editor"
    }
    
    rule[{"name": "TESTING: Block editor from POSTting", "action": "BlockResource"}]{
      input.request.method == "POST"
      input.request.role == "Editor"
    }
    
    rule[{"name": "Block video-editor from GETting surveys", "action": "BlockResource"}]{
      input.request.method == "GET"
      input.request.role == "video-editor"
      input.request.asset == "surveys"
    }

    rule[{"name": "Block video-editor from GETting videos if video editor is unsafe", "action": "BlockResource"}]{
      input.request.method == "GET"
      input.request.role == "video-editor"
      input.request.asset == "videos"
      input.request.situationStatus == "video-editor-unsafe"
    }
    
    rule[{"name": "Block video-booth-operator from GETting surveys if video-booth-operator is unsafe", "action": "BlockResource"}]{
      input.request.method == "GET"
      input.request.role == "video-booth-operator"
      input.request.asset == "videos"
      input.request.situationStatus == "video-booth-operator-unsafe"
    }

kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    openpolicyagent.org/policy: rego
  name: policy-smartmedia

